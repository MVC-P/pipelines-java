apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    jkube.io/git-branch: main
    jkube.io/git-commit: f45de5cb77b163b61aaa151fba1d13b0f44a1138
    jkube.io/git-url: https://github.com/MVC-P/pipelines-java.git
  labels:
    app: helloworld
    group: helloworld
    provider: jkube
    version: 1.0-SNAPSHOT
  name: helloworld
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: helloworld
      group: helloworld
      provider: jkube
  template:
    metadata:
      annotations:
        jkube.io/git-branch: main
        jkube.io/git-commit: f45de5cb77b163b61aaa151fba1d13b0f44a1138
        jkube.io/git-url: https://github.com/MVC-P/pipelines-java.git
      labels:
        app: helloworld
        group: helloworld
        provider: jkube
        version: 1.0-SNAPSHOT
    spec:
      containers:
        - env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: localhost:5000/cvm/helloworld:f45de5c-dirty@sha256:c069b2278e81e54f6aceae0ca370a6b498dcf8249df81d11390f957eb12dd7bf
          imagePullPolicy: IfNotPresent
          name: helloworld
          securityContext:
            privileged: false
          volumeMounts:
            - mountPath: /app/config
              name: config
      serviceAccount: ribbon
      volumes:
        - gitRepo:
            directory: .
            repository: https://github.com/jstrachan/sample-springboot-config.git
            revision: 667ee4db6bc842b127825351e5c9bae5a4fb2147
          name: config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sample-spring-boot-api
    env: dev
    owner: default
  name: sample-spring-boot-api
spec:
  ports:
    - name: http
      port: 8080
  selector:
    app: sample-spring-boot-api
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sample-spring-boot-api
    env: dev
    owner: default
  name: sample-spring-boot-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-spring-boot-api
  template:
    metadata:
      labels:
        app: sample-spring-boot-api
        env: dev
    spec:
      containers:
        - env:
            - name: INFO
              value: Spring Boot REST API
          image: :@
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          name: sample-spring-boot-api
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            runAsNonRoot: true
